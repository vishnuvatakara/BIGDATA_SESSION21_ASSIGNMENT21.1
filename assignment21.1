scala> val tweets=sqlContext.jsonFile("file:///home/acadgild/tweets.json")
warning: there were 1 deprecation warning(s); re-run with -deprecation for details
tweets: org.apache.spark.sql.DataFrame = [contributors: string, coordinates: string, created_at: string, entities: struct<hashtags:array<struct<indices:array<bigint>,text:string>>,symbols:array<string>,urls:array<string>,user_mentions:array<struct<id:bigint,id_str:string,indices:array<bigint>,name:string,screen_name:string>>>, favorite_count: bigint, favorited: boolean, filter_level: string, geo: string, id: bigint, id_str: string, in_reply_to_screen_name: string, in_reply_to_status_id: string, in_reply_to_status_id_str: string, in_reply_to_user_id: bigint, in_reply_to_user_id_str: string, is_quote_status: boolean, lang: string, place: string, retweet_count: bigint, retweeted: boolean, source: string, text: string, timestamp_ms: string, truncated: boolean, user: struct<contributors_enab...

scala> tweets.registerTempTable("tweets")

scala> val hashtags = sqlContext.sql("select id as id,entities.hashtags.text as words from tweets")
hashtags: org.apache.spark.sql.DataFrame = [id: bigint, words: array<string>]

scala> hashtags.registerTempTable("hashtags") 

scala> val hashtag_word = sqlContext.sql("select id as id,hashtag from hashtags LATERAL VIEW explode(words) w as hashtag")
hashtag_word: org.apache.spark.sql.DataFrame = [id: bigint, hashtag: string]

scala> hashtag_word.registerTempTable("hashtag_word")

scala> val popular_hashtags = sqlContext.sql("select hashtag, count(hashtag) as cnt from hashtag_word group by hashtag order by cnt desc").show 
+-----------+---+                                                               
|    hashtag|cnt|
+-----------+---+
|AchieveMore|  1|
+-----------+---+

popular_hashtags: Unit = ()

